name: Deploy Infrastructure to AWS App Runner

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop
  workflow_dispatch:

permissions:
  id-token: write   # Allows the workflow to request an OIDC token
  contents: read    # Allows reading the repository contents

env:
  AWS_REGION: us-east-1
  TERRAFORM_DIR: terraform

jobs:
  terraform:
    name: Terraform Plan/Apply
    runs-on: ubuntu-latest
    
    # Use GitHub Environments to securely manage prod/dev secrets
    environment:
      name: ${{ (github.ref == 'refs/heads/master' || github.base_ref == 'master') && 'prod' || 'dev' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }} # Uses the secret from the GitHub Environment
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: GitHubActions-Terraform

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        id: init
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: |
          WORKSPACE="dev" # Default to dev
          if [[ "${{ github.ref_name }}" == "master" || "${{ github.base_ref }}" == "master" ]]; then
            WORKSPACE="prod"
          fi

          terraform init \
            -backend-config="bucket=tf-state-acrn-dev" \
            -backend-config="key=${WORKSPACE}/terraform.tfstate" \
            -backend-config="region=${{ env.AWS_REGION }}" \
            -backend-config="dynamodb_table=tf-lock-acrn"

      - name: Select Terraform Workspace
        id: workspace
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: |
          if [[ "${{ github.ref_name }}" == "master" || "${{ github.base_ref }}" == "master" ]]; then
            terraform workspace select prod
          else
            terraform workspace select dev
          fi
      
      - name: Terraform Format Check
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: terraform fmt -check

      - name: Terraform Validate
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: terraform validate

      - name: Terraform Plan
        id: plan
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: |
          VAR_FILE="dev.tfvars"
          if [[ "${{ github.ref_name }}" == "master" || "${{ github.base_ref }}" == "master" ]]; then
            VAR_FILE="prod.tfvars"
          fi
          terraform plan -no-color -var-file="$VAR_FILE"

      - name: Terraform Apply
        if: github.ref_name == 'master' && github.event_name == 'push'
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: terraform apply -auto-approve -var-file="prod.tfvars"

